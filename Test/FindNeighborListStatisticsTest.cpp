#include <numeric>
#include <string>
#include <vector>

#include <QtCore/QString>

#include "SIMPLib/SIMPLib.h"
#include "SIMPLib/Common/SIMPLibSetGetMacros.h"
#include "SIMPLib/CoreFilters/DataContainerWriter.h"
#include "SIMPLib/DataArrays/DataArray.hpp"
#include "SIMPLib/DataArrays/NeighborList.hpp"
#include "SIMPLib/DataContainers/DataContainer.h"
#include "SIMPLib/DataContainers/DataContainerArray.h"
#include "SIMPLib/FilterParameters/JsonFilterParametersReader.h"
#include "SIMPLib/Filtering/FilterFactory.hpp"
#include "SIMPLib/Filtering/FilterManager.h"
#include "SIMPLib/Filtering/FilterPipeline.h"
#include "SIMPLib/Filtering/QMetaObjectUtilities.h"
#include "SIMPLib/Plugin/ISIMPLibPlugin.h"
#include "SIMPLib/Plugin/SIMPLibPluginLoader.h"

#include "UnitTestSupport.hpp"

#include "DREAM3DReview/DREAM3DReviewFilters/FindNeighborListStatistics.h"
#include "DREAM3DReviewTestFileLocations.h"

class FindNeighborListStatisticsTest
{

  const QString k_DataContainerName = {"DataContainer"};
  const QString k_AttributeMatrixName = {"CellData"};
  const QString k_NeighborListName = {"NeighborList"};
  const QString k_FloatArrayName = {"Float Array"};
  const size_t k_NumTuples = 1000;

public:
  FindNeighborListStatisticsTest() = default;
  virtual ~FindNeighborListStatisticsTest() = default;

  //
  // -----------------------------------------------------------------------------
  void RemoveTestFiles()
  {
#if REMOVE_TEST_FILES
    // QFile::remove(UnitTest::FindNeighborListStatisticsTest::TestFile1);
    // QFile::remove(UnitTest::FindNeighborListStatisticsTest::TestFile2);
#endif
  }

  // -----------------------------------------------------------------------------
  DataContainerArray::Pointer createDataStructure()
  {
    DataContainerArray::Pointer dca = DataContainerArray::New();
    DataContainer::Pointer dc = DataContainer::New(k_DataContainerName);
    dca->addOrReplaceDataContainer(dc);

    std::vector<size_t> tupleDims = {k_NumTuples};
    AttributeMatrix::Pointer am = AttributeMatrix::New(tupleDims, k_AttributeMatrixName, AttributeMatrix::Type::Cell);
    dc->addOrReplaceAttributeMatrix(am);
    using NeighborListType = NeighborList<float>;
    using NeighborListPointerType = typename NeighborListType::Pointer;
    using NeighborListSharedVectorType = typename NeighborListType::SharedVectorType;

    NeighborListPointerType nl = NeighborListType::CreateArray(tupleDims[0], k_NeighborListName, true);
    am->addOrReplaceAttributeArray(nl);

    for(size_t i = 0; i < tupleDims[0]; i++)
    {
      NeighborListSharedVectorType data = NeighborListType::SharedVectorType(new NeighborListType::VectorType);
      data->resize(i + 1);

      std::iota(data->begin(), data->end(), 0);
      nl->setList(static_cast<int32_t>(i), data);
    }

    am->addOrReplaceAttributeArray(nl);

    // Just create a generic data array that will help induce preflight errors
    FloatArrayType::Pointer fltArray = FloatArrayType::CreateArray(tupleDims[0], k_FloatArrayName, true);

    am->addOrReplaceAttributeArray(fltArray);

    return dca;
  }

  // -----------------------------------------------------------------------------
  int Test1()
  {
    Observer obs;

    FindNeighborListStatistics::Pointer filter = FindNeighborListStatistics::New();
    filter->connect(filter.get(), SIGNAL(messageGenerated(const AbstractMessage::Pointer&)), &obs, SLOT(processPipelineMessage(const AbstractMessage::Pointer&)));
    filter->setDataContainerArray(createDataStructure());
    filter->setSelectedArrayPath({k_DataContainerName, k_AttributeMatrixName, k_FloatArrayName});
    filter->setFindLength(true);
    filter->setFindMin(true);
    filter->setFindMax(true);
    filter->setFindMean(true);
    filter->setFindMedian(true);
    filter->setFindStdDeviation(true);
    filter->setFindSummation(true);

    filter->setDestinationAttributeMatrix({k_DataContainerName, k_AttributeMatrixName, ""});

    filter->preflight();
    int32_t err = filter->getErrorCode();
    DREAM3D_REQUIRED(err, ==, -11006)
    return EXIT_SUCCESS;
  }

  // -----------------------------------------------------------------------------
  int Test2()
  {
    // Observer obs;

    FindNeighborListStatistics::Pointer filter = FindNeighborListStatistics::New();
    // filter->connect(filter.get(), SIGNAL(messageGenerated(const AbstractMessage::Pointer&)), &obs, SLOT(processPipelineMessage(const AbstractMessage::Pointer&)));
    filter->setDataContainerArray(createDataStructure());
    filter->setSelectedArrayPath({k_DataContainerName, k_AttributeMatrixName, k_NeighborListName});
    filter->setFindLength(true);
    filter->setFindMin(true);
    filter->setFindMax(true);
    filter->setFindMean(true);
    filter->setFindMedian(true);
    filter->setFindStdDeviation(true);
    filter->setFindSummation(true);

    filter->setDestinationAttributeMatrix({k_DataContainerName, k_AttributeMatrixName, ""});

    filter->preflight();
    int32_t err = filter->getErrorCode();
    DREAM3D_REQUIRED(err, >=, 0)

    DataContainerArray::Pointer dca = createDataStructure();
    filter->setDataContainerArray(dca);
    filter->execute();
    err = filter->getErrorCode();
    DREAM3D_REQUIRED(err, >=, 0)

#if 0
    /// This code is here for debugging only.
    QString outputFile = UnitTest::TestTempDir + "/" + "FindNeighborListStatisticsTest.dream3d";

    DataContainerWriter::Pointer writer = DataContainerWriter::New();
    writer->setDataContainerArray(dca);
    writer->setOutputFile(outputFile);
    writer->setWriteXdmfFile(false);
    writer->execute();
#endif

    // Now test the results that were generated
    // Check the Length Array Values
    AttributeMatrix::Pointer am = dca->getDataContainer(k_DataContainerName)->getAttributeMatrix(k_AttributeMatrixName);

    FloatArrayType::Pointer minArray = am->getAttributeArrayAs<FloatArrayType>("Minimum");
    DREAM3D_REQUIRE_VALID_POINTER(minArray.get())
    for(size_t i = 0; i < minArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(0.0f, ((*minArray)[i]))
    }

    FloatArrayType::Pointer maxArray = am->getAttributeArrayAs<FloatArrayType>("Maximum");
    DREAM3D_REQUIRE_VALID_POINTER(maxArray.get())
    for(size_t i = 0; i < maxArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(i + 0.0f, ((*maxArray)[i]))
    }

    SizeTArrayType::Pointer lengthArray = am->getAttributeArrayAs<SizeTArrayType>("Length");
    DREAM3D_REQUIRE_VALID_POINTER(lengthArray.get())
    for(size_t i = 0; i < lengthArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(i + 1, ((*lengthArray)[i]))
    }

    FloatArrayType::Pointer meanArray = am->getAttributeArrayAs<FloatArrayType>("Mean");
    DREAM3D_REQUIRE_VALID_POINTER(meanArray.get())
    for(size_t i = 0; i < meanArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(k_MeanData[i], ((*meanArray)[i]))
    }

    FloatArrayType::Pointer medianArray = am->getAttributeArrayAs<FloatArrayType>("Median");
    DREAM3D_REQUIRE_VALID_POINTER(medianArray.get())
    for(size_t i = 0; i < medianArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(k_MedianData[i], ((*medianArray)[i]))
    }

    FloatArrayType::Pointer stdDevArray = am->getAttributeArrayAs<FloatArrayType>("StandardDeviation");
    DREAM3D_REQUIRE_VALID_POINTER(stdDevArray.get())
    for(size_t i = 0; i < stdDevArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(k_StdDevData[i], ((*stdDevArray)[i]))
    }

    FloatArrayType::Pointer sumArray = am->getAttributeArrayAs<FloatArrayType>("Summation");
    DREAM3D_REQUIRE_VALID_POINTER(sumArray.get())
    for(size_t i = 0; i < sumArray->getNumberOfTuples(); i++)
    {
      DREAM3D_REQUIRE_EQUAL(k_SummationData[i], ((*sumArray)[i]))
    }

    return EXIT_SUCCESS;
  }

  // -----------------------------------------------------------------------------
  //
  // -----------------------------------------------------------------------------
  void operator()()
  {
    std::cout << "###### FindNeighborListStatisticsTest ######" << std::endl;
    int err = EXIT_SUCCESS;

    DREAM3D_REGISTER_TEST(Test1())

    DREAM3D_REGISTER_TEST(Test2())

    DREAM3D_REGISTER_TEST(RemoveTestFiles())
  }

public:
  FindNeighborListStatisticsTest(const FindNeighborListStatisticsTest&) = delete;            // Copy Constructor Not Implemented
  FindNeighborListStatisticsTest(FindNeighborListStatisticsTest&&) = delete;                 // Move Constructor Not Implemented
  FindNeighborListStatisticsTest& operator=(const FindNeighborListStatisticsTest&) = delete; // Copy Assignment Not Implemented
  FindNeighborListStatisticsTest& operator=(FindNeighborListStatisticsTest&&) = delete;      // Move Assignment Not Implemented

  //
  const std::vector<float> k_MeanData = {
      0.0,   0.5,   1.0,   1.5,   2.0,   2.5,   3.0,   3.5,   4.0,   4.5,   5.0,   5.5,   6.0,   6.5,   7.0,   7.5,   8.0,   8.5,   9.0,   9.5,   10.0,  10.5,  11.0,  11.5,  12.0,  12.5,  13.0,
      13.5,  14.0,  14.5,  15.0,  15.5,  16.0,  16.5,  17.0,  17.5,  18.0,  18.5,  19.0,  19.5,  20.0,  20.5,  21.0,  21.5,  22.0,  22.5,  23.0,  23.5,  24.0,  24.5,  25.0,  25.5,  26.0,  26.5,
      27.0,  27.5,  28.0,  28.5,  29.0,  29.5,  30.0,  30.5,  31.0,  31.5,  32.0,  32.5,  33.0,  33.5,  34.0,  34.5,  35.0,  35.5,  36.0,  36.5,  37.0,  37.5,  38.0,  38.5,  39.0,  39.5,  40.0,
      40.5,  41.0,  41.5,  42.0,  42.5,  43.0,  43.5,  44.0,  44.5,  45.0,  45.5,  46.0,  46.5,  47.0,  47.5,  48.0,  48.5,  49.0,  49.5,  50.0,  50.5,  51.0,  51.5,  52.0,  52.5,  53.0,  53.5,
      54.0,  54.5,  55.0,  55.5,  56.0,  56.5,  57.0,  57.5,  58.0,  58.5,  59.0,  59.5,  60.0,  60.5,  61.0,  61.5,  62.0,  62.5,  63.0,  63.5,  64.0,  64.5,  65.0,  65.5,  66.0,  66.5,  67.0,
      67.5,  68.0,  68.5,  69.0,  69.5,  70.0,  70.5,  71.0,  71.5,  72.0,  72.5,  73.0,  73.5,  74.0,  74.5,  75.0,  75.5,  76.0,  76.5,  77.0,  77.5,  78.0,  78.5,  79.0,  79.5,  80.0,  80.5,
      81.0,  81.5,  82.0,  82.5,  83.0,  83.5,  84.0,  84.5,  85.0,  85.5,  86.0,  86.5,  87.0,  87.5,  88.0,  88.5,  89.0,  89.5,  90.0,  90.5,  91.0,  91.5,  92.0,  92.5,  93.0,  93.5,  94.0,
      94.5,  95.0,  95.5,  96.0,  96.5,  97.0,  97.5,  98.0,  98.5,  99.0,  99.5,  100.0, 100.5, 101.0, 101.5, 102.0, 102.5, 103.0, 103.5, 104.0, 104.5, 105.0, 105.5, 106.0, 106.5, 107.0, 107.5,
      108.0, 108.5, 109.0, 109.5, 110.0, 110.5, 111.0, 111.5, 112.0, 112.5, 113.0, 113.5, 114.0, 114.5, 115.0, 115.5, 116.0, 116.5, 117.0, 117.5, 118.0, 118.5, 119.0, 119.5, 120.0, 120.5, 121.0,
      121.5, 122.0, 122.5, 123.0, 123.5, 124.0, 124.5, 125.0, 125.5, 126.0, 126.5, 127.0, 127.5, 128.0, 128.5, 129.0, 129.5, 130.0, 130.5, 131.0, 131.5, 132.0, 132.5, 133.0, 133.5, 134.0, 134.5,
      135.0, 135.5, 136.0, 136.5, 137.0, 137.5, 138.0, 138.5, 139.0, 139.5, 140.0, 140.5, 141.0, 141.5, 142.0, 142.5, 143.0, 143.5, 144.0, 144.5, 145.0, 145.5, 146.0, 146.5, 147.0, 147.5, 148.0,
      148.5, 149.0, 149.5, 150.0, 150.5, 151.0, 151.5, 152.0, 152.5, 153.0, 153.5, 154.0, 154.5, 155.0, 155.5, 156.0, 156.5, 157.0, 157.5, 158.0, 158.5, 159.0, 159.5, 160.0, 160.5, 161.0, 161.5,
      162.0, 162.5, 163.0, 163.5, 164.0, 164.5, 165.0, 165.5, 166.0, 166.5, 167.0, 167.5, 168.0, 168.5, 169.0, 169.5, 170.0, 170.5, 171.0, 171.5, 172.0, 172.5, 173.0, 173.5, 174.0, 174.5, 175.0,
      175.5, 176.0, 176.5, 177.0, 177.5, 178.0, 178.5, 179.0, 179.5, 180.0, 180.5, 181.0, 181.5, 182.0, 182.5, 183.0, 183.5, 184.0, 184.5, 185.0, 185.5, 186.0, 186.5, 187.0, 187.5, 188.0, 188.5,
      189.0, 189.5, 190.0, 190.5, 191.0, 191.5, 192.0, 192.5, 193.0, 193.5, 194.0, 194.5, 195.0, 195.5, 196.0, 196.5, 197.0, 197.5, 198.0, 198.5, 199.0, 199.5, 200.0, 200.5, 201.0, 201.5, 202.0,
      202.5, 203.0, 203.5, 204.0, 204.5, 205.0, 205.5, 206.0, 206.5, 207.0, 207.5, 208.0, 208.5, 209.0, 209.5, 210.0, 210.5, 211.0, 211.5, 212.0, 212.5, 213.0, 213.5, 214.0, 214.5, 215.0, 215.5,
      216.0, 216.5, 217.0, 217.5, 218.0, 218.5, 219.0, 219.5, 220.0, 220.5, 221.0, 221.5, 222.0, 222.5, 223.0, 223.5, 224.0, 224.5, 225.0, 225.5, 226.0, 226.5, 227.0, 227.5, 228.0, 228.5, 229.0,
      229.5, 230.0, 230.5, 231.0, 231.5, 232.0, 232.5, 233.0, 233.5, 234.0, 234.5, 235.0, 235.5, 236.0, 236.5, 237.0, 237.5, 238.0, 238.5, 239.0, 239.5, 240.0, 240.5, 241.0, 241.5, 242.0, 242.5,
      243.0, 243.5, 244.0, 244.5, 245.0, 245.5, 246.0, 246.5, 247.0, 247.5, 248.0, 248.5, 249.0, 249.5, 250.0, 250.5, 251.0, 251.5, 252.0, 252.5, 253.0, 253.5, 254.0, 254.5, 255.0, 255.5, 256.0,
      256.5, 257.0, 257.5, 258.0, 258.5, 259.0, 259.5, 260.0, 260.5, 261.0, 261.5, 262.0, 262.5, 263.0, 263.5, 264.0, 264.5, 265.0, 265.5, 266.0, 266.5, 267.0, 267.5, 268.0, 268.5, 269.0, 269.5,
      270.0, 270.5, 271.0, 271.5, 272.0, 272.5, 273.0, 273.5, 274.0, 274.5, 275.0, 275.5, 276.0, 276.5, 277.0, 277.5, 278.0, 278.5, 279.0, 279.5, 280.0, 280.5, 281.0, 281.5, 282.0, 282.5, 283.0,
      283.5, 284.0, 284.5, 285.0, 285.5, 286.0, 286.5, 287.0, 287.5, 288.0, 288.5, 289.0, 289.5, 290.0, 290.5, 291.0, 291.5, 292.0, 292.5, 293.0, 293.5, 294.0, 294.5, 295.0, 295.5, 296.0, 296.5,
      297.0, 297.5, 298.0, 298.5, 299.0, 299.5, 300.0, 300.5, 301.0, 301.5, 302.0, 302.5, 303.0, 303.5, 304.0, 304.5, 305.0, 305.5, 306.0, 306.5, 307.0, 307.5, 308.0, 308.5, 309.0, 309.5, 310.0,
      310.5, 311.0, 311.5, 312.0, 312.5, 313.0, 313.5, 314.0, 314.5, 315.0, 315.5, 316.0, 316.5, 317.0, 317.5, 318.0, 318.5, 319.0, 319.5, 320.0, 320.5, 321.0, 321.5, 322.0, 322.5, 323.0, 323.5,
      324.0, 324.5, 325.0, 325.5, 326.0, 326.5, 327.0, 327.5, 328.0, 328.5, 329.0, 329.5, 330.0, 330.5, 331.0, 331.5, 332.0, 332.5, 333.0, 333.5, 334.0, 334.5, 335.0, 335.5, 336.0, 336.5, 337.0,
      337.5, 338.0, 338.5, 339.0, 339.5, 340.0, 340.5, 341.0, 341.5, 342.0, 342.5, 343.0, 343.5, 344.0, 344.5, 345.0, 345.5, 346.0, 346.5, 347.0, 347.5, 348.0, 348.5, 349.0, 349.5, 350.0, 350.5,
      351.0, 351.5, 352.0, 352.5, 353.0, 353.5, 354.0, 354.5, 355.0, 355.5, 356.0, 356.5, 357.0, 357.5, 358.0, 358.5, 359.0, 359.5, 360.0, 360.5, 361.0, 361.5, 362.0, 362.5, 363.0, 363.5, 364.0,
      364.5, 365.0, 365.5, 366.0, 366.5, 367.0, 367.5, 368.0, 368.5, 369.0, 369.5, 370.0, 370.5, 371.0, 371.5, 372.0, 372.5, 373.0, 373.5, 374.0, 374.5, 375.0, 375.5, 376.0, 376.5, 377.0, 377.5,
      378.0, 378.5, 379.0, 379.5, 380.0, 380.5, 381.0, 381.5, 382.0, 382.5, 383.0, 383.5, 384.0, 384.5, 385.0, 385.5, 386.0, 386.5, 387.0, 387.5, 388.0, 388.5, 389.0, 389.5, 390.0, 390.5, 391.0,
      391.5, 392.0, 392.5, 393.0, 393.5, 394.0, 394.5, 395.0, 395.5, 396.0, 396.5, 397.0, 397.5, 398.0, 398.5, 399.0, 399.5, 400.0, 400.5, 401.0, 401.5, 402.0, 402.5, 403.0, 403.5, 404.0, 404.5,
      405.0, 405.5, 406.0, 406.5, 407.0, 407.5, 408.0, 408.5, 409.0, 409.5, 410.0, 410.5, 411.0, 411.5, 412.0, 412.5, 413.0, 413.5, 414.0, 414.5, 415.0, 415.5, 416.0, 416.5, 417.0, 417.5, 418.0,
      418.5, 419.0, 419.5, 420.0, 420.5, 421.0, 421.5, 422.0, 422.5, 423.0, 423.5, 424.0, 424.5, 425.0, 425.5, 426.0, 426.5, 427.0, 427.5, 428.0, 428.5, 429.0, 429.5, 430.0, 430.5, 431.0, 431.5,
      432.0, 432.5, 433.0, 433.5, 434.0, 434.5, 435.0, 435.5, 436.0, 436.5, 437.0, 437.5, 438.0, 438.5, 439.0, 439.5, 440.0, 440.5, 441.0, 441.5, 442.0, 442.5, 443.0, 443.5, 444.0, 444.5, 445.0,
      445.5, 446.0, 446.5, 447.0, 447.5, 448.0, 448.5, 449.0, 449.5, 450.0, 450.5, 451.0, 451.5, 452.0, 452.5, 453.0, 453.5, 454.0, 454.5, 455.0, 455.5, 456.0, 456.5, 457.0, 457.5, 458.0, 458.5,
      459.0, 459.5, 460.0, 460.5, 461.0, 461.5, 462.0, 462.5, 463.0, 463.5, 464.0, 464.5, 465.0, 465.5, 466.0, 466.5, 467.0, 467.5, 468.0, 468.5, 469.0, 469.5, 470.0, 470.5, 471.0, 471.5, 472.0,
      472.5, 473.0, 473.5, 474.0, 474.5, 475.0, 475.5, 476.0, 476.5, 477.0, 477.5, 478.0, 478.5, 479.0, 479.5, 480.0, 480.5, 481.0, 481.5, 482.0, 482.5, 483.0, 483.5, 484.0, 484.5, 485.0, 485.5,
      486.0, 486.5, 487.0, 487.5, 488.0, 488.5, 489.0, 489.5, 490.0, 490.5, 491.0, 491.5, 492.0, 492.5, 493.0, 493.5, 494.0, 494.5, 495.0, 495.5, 496.0, 496.5, 497.0, 497.5, 498.0, 498.5, 499.0,
      499.5};

  const std::vector<float> k_MedianData = {
      0.0,   0.5,   1.0,   1.5,   2.0,   2.5,   3.0,   3.5,   4.0,   4.5,   5.0,   5.5,   6.0,   6.5,   7.0,   7.5,   8.0,   8.5,   9.0,   9.5,   10.0,  10.5,  11.0,  11.5,  12.0,  12.5,  13.0,
      13.5,  14.0,  14.5,  15.0,  15.5,  16.0,  16.5,  17.0,  17.5,  18.0,  18.5,  19.0,  19.5,  20.0,  20.5,  21.0,  21.5,  22.0,  22.5,  23.0,  23.5,  24.0,  24.5,  25.0,  25.5,  26.0,  26.5,
      27.0,  27.5,  28.0,  28.5,  29.0,  29.5,  30.0,  30.5,  31.0,  31.5,  32.0,  32.5,  33.0,  33.5,  34.0,  34.5,  35.0,  35.5,  36.0,  36.5,  37.0,  37.5,  38.0,  38.5,  39.0,  39.5,  40.0,
      40.5,  41.0,  41.5,  42.0,  42.5,  43.0,  43.5,  44.0,  44.5,  45.0,  45.5,  46.0,  46.5,  47.0,  47.5,  48.0,  48.5,  49.0,  49.5,  50.0,  50.5,  51.0,  51.5,  52.0,  52.5,  53.0,  53.5,
      54.0,  54.5,  55.0,  55.5,  56.0,  56.5,  57.0,  57.5,  58.0,  58.5,  59.0,  59.5,  60.0,  60.5,  61.0,  61.5,  62.0,  62.5,  63.0,  63.5,  64.0,  64.5,  65.0,  65.5,  66.0,  66.5,  67.0,
      67.5,  68.0,  68.5,  69.0,  69.5,  70.0,  70.5,  71.0,  71.5,  72.0,  72.5,  73.0,  73.5,  74.0,  74.5,  75.0,  75.5,  76.0,  76.5,  77.0,  77.5,  78.0,  78.5,  79.0,  79.5,  80.0,  80.5,
      81.0,  81.5,  82.0,  82.5,  83.0,  83.5,  84.0,  84.5,  85.0,  85.5,  86.0,  86.5,  87.0,  87.5,  88.0,  88.5,  89.0,  89.5,  90.0,  90.5,  91.0,  91.5,  92.0,  92.5,  93.0,  93.5,  94.0,
      94.5,  95.0,  95.5,  96.0,  96.5,  97.0,  97.5,  98.0,  98.5,  99.0,  99.5,  100.0, 100.5, 101.0, 101.5, 102.0, 102.5, 103.0, 103.5, 104.0, 104.5, 105.0, 105.5, 106.0, 106.5, 107.0, 107.5,
      108.0, 108.5, 109.0, 109.5, 110.0, 110.5, 111.0, 111.5, 112.0, 112.5, 113.0, 113.5, 114.0, 114.5, 115.0, 115.5, 116.0, 116.5, 117.0, 117.5, 118.0, 118.5, 119.0, 119.5, 120.0, 120.5, 121.0,
      121.5, 122.0, 122.5, 123.0, 123.5, 124.0, 124.5, 125.0, 125.5, 126.0, 126.5, 127.0, 127.5, 128.0, 128.5, 129.0, 129.5, 130.0, 130.5, 131.0, 131.5, 132.0, 132.5, 133.0, 133.5, 134.0, 134.5,
      135.0, 135.5, 136.0, 136.5, 137.0, 137.5, 138.0, 138.5, 139.0, 139.5, 140.0, 140.5, 141.0, 141.5, 142.0, 142.5, 143.0, 143.5, 144.0, 144.5, 145.0, 145.5, 146.0, 146.5, 147.0, 147.5, 148.0,
      148.5, 149.0, 149.5, 150.0, 150.5, 151.0, 151.5, 152.0, 152.5, 153.0, 153.5, 154.0, 154.5, 155.0, 155.5, 156.0, 156.5, 157.0, 157.5, 158.0, 158.5, 159.0, 159.5, 160.0, 160.5, 161.0, 161.5,
      162.0, 162.5, 163.0, 163.5, 164.0, 164.5, 165.0, 165.5, 166.0, 166.5, 167.0, 167.5, 168.0, 168.5, 169.0, 169.5, 170.0, 170.5, 171.0, 171.5, 172.0, 172.5, 173.0, 173.5, 174.0, 174.5, 175.0,
      175.5, 176.0, 176.5, 177.0, 177.5, 178.0, 178.5, 179.0, 179.5, 180.0, 180.5, 181.0, 181.5, 182.0, 182.5, 183.0, 183.5, 184.0, 184.5, 185.0, 185.5, 186.0, 186.5, 187.0, 187.5, 188.0, 188.5,
      189.0, 189.5, 190.0, 190.5, 191.0, 191.5, 192.0, 192.5, 193.0, 193.5, 194.0, 194.5, 195.0, 195.5, 196.0, 196.5, 197.0, 197.5, 198.0, 198.5, 199.0, 199.5, 200.0, 200.5, 201.0, 201.5, 202.0,
      202.5, 203.0, 203.5, 204.0, 204.5, 205.0, 205.5, 206.0, 206.5, 207.0, 207.5, 208.0, 208.5, 209.0, 209.5, 210.0, 210.5, 211.0, 211.5, 212.0, 212.5, 213.0, 213.5, 214.0, 214.5, 215.0, 215.5,
      216.0, 216.5, 217.0, 217.5, 218.0, 218.5, 219.0, 219.5, 220.0, 220.5, 221.0, 221.5, 222.0, 222.5, 223.0, 223.5, 224.0, 224.5, 225.0, 225.5, 226.0, 226.5, 227.0, 227.5, 228.0, 228.5, 229.0,
      229.5, 230.0, 230.5, 231.0, 231.5, 232.0, 232.5, 233.0, 233.5, 234.0, 234.5, 235.0, 235.5, 236.0, 236.5, 237.0, 237.5, 238.0, 238.5, 239.0, 239.5, 240.0, 240.5, 241.0, 241.5, 242.0, 242.5,
      243.0, 243.5, 244.0, 244.5, 245.0, 245.5, 246.0, 246.5, 247.0, 247.5, 248.0, 248.5, 249.0, 249.5, 250.0, 250.5, 251.0, 251.5, 252.0, 252.5, 253.0, 253.5, 254.0, 254.5, 255.0, 255.5, 256.0,
      256.5, 257.0, 257.5, 258.0, 258.5, 259.0, 259.5, 260.0, 260.5, 261.0, 261.5, 262.0, 262.5, 263.0, 263.5, 264.0, 264.5, 265.0, 265.5, 266.0, 266.5, 267.0, 267.5, 268.0, 268.5, 269.0, 269.5,
      270.0, 270.5, 271.0, 271.5, 272.0, 272.5, 273.0, 273.5, 274.0, 274.5, 275.0, 275.5, 276.0, 276.5, 277.0, 277.5, 278.0, 278.5, 279.0, 279.5, 280.0, 280.5, 281.0, 281.5, 282.0, 282.5, 283.0,
      283.5, 284.0, 284.5, 285.0, 285.5, 286.0, 286.5, 287.0, 287.5, 288.0, 288.5, 289.0, 289.5, 290.0, 290.5, 291.0, 291.5, 292.0, 292.5, 293.0, 293.5, 294.0, 294.5, 295.0, 295.5, 296.0, 296.5,
      297.0, 297.5, 298.0, 298.5, 299.0, 299.5, 300.0, 300.5, 301.0, 301.5, 302.0, 302.5, 303.0, 303.5, 304.0, 304.5, 305.0, 305.5, 306.0, 306.5, 307.0, 307.5, 308.0, 308.5, 309.0, 309.5, 310.0,
      310.5, 311.0, 311.5, 312.0, 312.5, 313.0, 313.5, 314.0, 314.5, 315.0, 315.5, 316.0, 316.5, 317.0, 317.5, 318.0, 318.5, 319.0, 319.5, 320.0, 320.5, 321.0, 321.5, 322.0, 322.5, 323.0, 323.5,
      324.0, 324.5, 325.0, 325.5, 326.0, 326.5, 327.0, 327.5, 328.0, 328.5, 329.0, 329.5, 330.0, 330.5, 331.0, 331.5, 332.0, 332.5, 333.0, 333.5, 334.0, 334.5, 335.0, 335.5, 336.0, 336.5, 337.0,
      337.5, 338.0, 338.5, 339.0, 339.5, 340.0, 340.5, 341.0, 341.5, 342.0, 342.5, 343.0, 343.5, 344.0, 344.5, 345.0, 345.5, 346.0, 346.5, 347.0, 347.5, 348.0, 348.5, 349.0, 349.5, 350.0, 350.5,
      351.0, 351.5, 352.0, 352.5, 353.0, 353.5, 354.0, 354.5, 355.0, 355.5, 356.0, 356.5, 357.0, 357.5, 358.0, 358.5, 359.0, 359.5, 360.0, 360.5, 361.0, 361.5, 362.0, 362.5, 363.0, 363.5, 364.0,
      364.5, 365.0, 365.5, 366.0, 366.5, 367.0, 367.5, 368.0, 368.5, 369.0, 369.5, 370.0, 370.5, 371.0, 371.5, 372.0, 372.5, 373.0, 373.5, 374.0, 374.5, 375.0, 375.5, 376.0, 376.5, 377.0, 377.5,
      378.0, 378.5, 379.0, 379.5, 380.0, 380.5, 381.0, 381.5, 382.0, 382.5, 383.0, 383.5, 384.0, 384.5, 385.0, 385.5, 386.0, 386.5, 387.0, 387.5, 388.0, 388.5, 389.0, 389.5, 390.0, 390.5, 391.0,
      391.5, 392.0, 392.5, 393.0, 393.5, 394.0, 394.5, 395.0, 395.5, 396.0, 396.5, 397.0, 397.5, 398.0, 398.5, 399.0, 399.5, 400.0, 400.5, 401.0, 401.5, 402.0, 402.5, 403.0, 403.5, 404.0, 404.5,
      405.0, 405.5, 406.0, 406.5, 407.0, 407.5, 408.0, 408.5, 409.0, 409.5, 410.0, 410.5, 411.0, 411.5, 412.0, 412.5, 413.0, 413.5, 414.0, 414.5, 415.0, 415.5, 416.0, 416.5, 417.0, 417.5, 418.0,
      418.5, 419.0, 419.5, 420.0, 420.5, 421.0, 421.5, 422.0, 422.5, 423.0, 423.5, 424.0, 424.5, 425.0, 425.5, 426.0, 426.5, 427.0, 427.5, 428.0, 428.5, 429.0, 429.5, 430.0, 430.5, 431.0, 431.5,
      432.0, 432.5, 433.0, 433.5, 434.0, 434.5, 435.0, 435.5, 436.0, 436.5, 437.0, 437.5, 438.0, 438.5, 439.0, 439.5, 440.0, 440.5, 441.0, 441.5, 442.0, 442.5, 443.0, 443.5, 444.0, 444.5, 445.0,
      445.5, 446.0, 446.5, 447.0, 447.5, 448.0, 448.5, 449.0, 449.5, 450.0, 450.5, 451.0, 451.5, 452.0, 452.5, 453.0, 453.5, 454.0, 454.5, 455.0, 455.5, 456.0, 456.5, 457.0, 457.5, 458.0, 458.5,
      459.0, 459.5, 460.0, 460.5, 461.0, 461.5, 462.0, 462.5, 463.0, 463.5, 464.0, 464.5, 465.0, 465.5, 466.0, 466.5, 467.0, 467.5, 468.0, 468.5, 469.0, 469.5, 470.0, 470.5, 471.0, 471.5, 472.0,
      472.5, 473.0, 473.5, 474.0, 474.5, 475.0, 475.5, 476.0, 476.5, 477.0, 477.5, 478.0, 478.5, 479.0, 479.5, 480.0, 480.5, 481.0, 481.5, 482.0, 482.5, 483.0, 483.5, 484.0, 484.5, 485.0, 485.5,
      486.0, 486.5, 487.0, 487.5, 488.0, 488.5, 489.0, 489.5, 490.0, 490.5, 491.0, 491.5, 492.0, 492.5, 493.0, 493.5, 494.0, 494.5, 495.0, 495.5, 496.0, 496.5, 497.0, 497.5, 498.0, 498.5, 499.0,
      499.5,
  };

  std::vector<float> k_StdDevData = {
      0.0,       0.5,       0.8164966,  1.118034,   1.4142135, 1.7078252, 2.0,        2.291288,   2.5819888,  2.8722813,  3.1622777,  3.4520526,  3.7416575, 4.031129,  4.3204937,  4.609772,
      4.8989797, 5.1881275, 5.477226,   5.766281,   6.0553007, 6.344289,  6.6332498,  6.922187,   7.2111025,  7.5,        7.788881,   8.077747,   8.3666,    8.655441,  8.944272,   9.233092,
      9.521904,  9.810708,  10.099504,  10.388294,  10.677078, 10.965857, 11.254628,  11.543396,  11.83216,   12.120919,  12.409674,  12.698425,  12.987173, 13.275918, 13.56466,   13.853399,
      14.142136, 14.43087,  14.719602,  15.008331,  15.297058, 15.585784, 15.874508,  16.163229,  16.45195,   16.74067,   17.029387,  17.318102,  17.606817, 17.89553,  18.184242,  18.472954,
      18.761663, 19.050371, 19.339079,  19.627787,  19.916492, 20.205198, 20.493902,  20.782604,  21.071308,  21.36001,   21.64871,   21.93741,   22.22611,  22.51481,  22.803509,  23.092207,
      23.380905, 23.669601, 23.958298,  24.246994,  24.535688, 24.824383, 25.113077,  25.401772,  25.690466,  25.979158,  26.26785,   26.556543,  26.845236, 27.133926, 27.422619,  27.71131,
      28.0,      28.28869,  28.577381,  28.86607,   29.15476,  29.443449, 29.732138,  30.020826,  30.309515,  30.598202,  30.88689,   31.17558,   31.464266, 31.752953, 32.041637,  32.330326,
      32.619015, 32.9077,   33.196384,  33.485073,  33.773758, 34.062443, 34.351128,  34.639812,  34.928497,  35.217182,  35.505867,  35.79455,   36.083237, 36.37192,  36.660606,  36.94929,
      37.237972, 37.526657, 37.815342,  38.104023,  38.392708, 38.681393, 38.970074,  39.25876,   39.54744,   39.83612,   40.124805,  40.413486,  40.70217,  40.990852, 41.279533,  41.56822,
      41.8569,   42.14558,  42.43426,   42.722946,  43.011627, 43.30031,  43.58899,   43.87767,   44.16635,   44.455032,  44.743713,  45.032394,  45.321075, 45.609756, 45.89844,   46.18712,
      46.4758,   46.76448,  47.05316,   47.341843,  47.630524, 47.919205, 48.207882,  48.496563,  48.785244,  49.073925,  49.362606,  49.651283,  49.939964, 50.228645, 50.517323,  50.806004,
      51.094685, 51.38336,  51.672043,  51.960724,  52.2494,   52.538082, 52.826763,  53.11544,   53.40412,   53.6928,    53.98148,   54.270157,  54.558838, 54.847515, 55.136196,  55.424873,
      55.713554, 56.00223,  56.290913,  56.57959,   56.868267, 57.156948, 57.445625,  57.734306,  58.022984,  58.31166,   58.60034,   58.88902,   59.1777,   59.466377, 59.755054,  60.043736,
      60.332413, 60.62109,  60.90977,   61.19845,   61.487125, 61.775803, 62.064484,  62.35316,   62.641838,  62.93052,   63.219196,  63.507874,  63.79655,  64.08523,  64.37391,   64.66258,
      64.95126,  65.239944, 65.52862,   65.8173,    66.10597,  66.39465,  66.68333,   66.97201,   67.26069,   67.54936,   67.83804,   68.12672,   68.4154,   68.70408,  68.99275,   69.28143,
      69.57011,  69.85879,  70.14746,   70.43614,   70.724815, 71.0135,   71.30218,   71.59085,   71.879524,  72.168205,  72.45689,   72.74556,   73.03424,  73.322914, 73.611595,  73.90027,
      74.18895,  74.47762,  74.766304,  75.05498,   75.34366,  75.63233,  75.92101,   76.20969,   76.49837,   76.78704,   77.07572,   77.364395,  77.653076, 77.94175,  78.23043,   78.519104,
      78.807785, 79.09646,  79.38514,   79.67381,   79.962494, 80.25117,  80.53984,   80.82852,   81.1172,    81.405876,  81.69455,   81.98323,   82.271904, 82.560585, 82.84926,   83.13794,
      83.42661,  83.715294, 84.00397,   84.29265,   84.58132,  84.869995, 85.158676,  85.44735,   85.73603,   86.024704,  86.313385,  86.60206,   86.89074,  87.17941,  87.46809,   87.75677,
      88.04544,  88.33412,  88.622795,  88.911476,  89.20015,  89.48882,  89.777504,  90.06618,   90.35486,   90.64353,   90.93221,   91.22089,   91.50956,  91.79824,  92.086914,  92.375595,
      92.66427,  92.95294,  93.24162,   93.5303,    93.81898,  94.10765,  94.39633,   94.685005,  94.97368,   95.26236,   95.55103,   95.83971,   96.12839,  96.41706,  96.70574,   96.994415,
      97.28309,  97.57177,  97.86044,   98.149124,  98.4378,   98.72648,  99.01515,   99.303825,  99.59251,   99.88118,   100.16985,  100.458534, 100.74721, 101.03588, 101.32456,  101.613235,
      101.90192, 102.19059, 102.47926,  102.767944, 103.05662, 103.3453,  103.63397,  103.922646, 104.21133,  104.5,      104.78868,  105.077354, 105.36603, 105.65471, 105.94338,  106.232056,
      106.52074, 106.80941, 107.09808,  107.386765, 107.67544, 107.96411, 108.25279,  108.54145,  108.83014,  109.11879,  109.40749,  109.69614,  109.98485, 110.27348, 110.5622,   110.85083,
      111.13955, 111.42818, 111.7169,   112.00552,  112.29426, 112.58287, 112.871605, 113.16022,  113.44896,  113.737564, 114.02631,  114.31491,  114.60367, 114.89226, 115.181015, 115.46961,
      115.75837, 116.04695, 116.335724, 116.6243,   116.91308, 117.20164, 117.490425, 117.778984, 118.06778,  118.35633,  118.645134, 118.933685, 119.22248, 119.51103, 119.799835, 120.08838,
      120.37719, 120.66572, 120.95454,  121.243065, 121.53189, 121.82041, 122.109245, 122.39776,  122.68659,  122.975105, 123.26395,  123.55245,  123.8413,  124.1298,  124.41865,  124.70714,
      124.996,   125.28449, 125.57336,  125.861824, 126.1507,  126.43918, 126.72806,  127.01652,  127.305405, 127.593864, 127.88276,  128.1712,   128.46011, 128.74857, 129.03746,  129.3259,
      129.6148,  129.90324, 130.19217,  130.48058,  130.76952, 131.05792, 131.34686,  131.63525,  131.92422,  132.2126,   132.50157,  132.78993,  133.07892, 133.36726, 133.65628,  133.94458,
      134.23363, 134.52176, 134.81097,  135.09906,  135.38834, 135.6764,  135.96568,  136.25374,  136.54303,  136.83109,  137.12039,  137.40843,  137.69774, 137.98576, 138.27509,  138.56311,
      138.85243, 139.14046, 139.4298,   139.7178,   140.00714, 140.29515, 140.58449,  140.8725,   141.16185,  141.44984,  141.7392,   142.0272,   142.31654, 142.60455, 142.89389,  143.1819,
      143.47125, 143.75925, 144.0486,   144.33661,  144.62595, 144.91396, 145.20331,  145.4913,   145.78065,  146.06865,  146.358,    146.646,    146.93536, 147.22334, 147.51271,  147.8007,
      148.09006, 148.37805, 148.66742,  148.9554,   149.24477, 149.53276, 149.82211,  150.1101,   150.39948,  150.68745,  150.97682,  151.2648,   151.55417, 151.84216, 152.13152,  152.41951,
      152.70888, 152.99686, 153.28622,  153.57422,  153.86357, 154.15157, 154.44093,  154.72891,  155.01828,  155.30627,  155.59563,  155.88362,  156.17297, 156.46097, 156.75034,  157.03833,
      157.32768, 157.61568, 157.90503,  158.19304,  158.48239, 158.77039, 159.05974,  159.34773,  159.63708,  159.92508,  160.21443,  160.50244,  160.7918,  161.07979, 161.36914,  161.65714,
      161.94649, 162.23448, 162.52385,  162.81184,  163.1012,  163.38919, 163.67854,  163.96655,  164.2559,   164.5439,   164.83325,  165.12125,  165.4106,  165.69861, 165.98795,  166.27596,
      166.5653,  166.85332, 167.14265,  167.43066,  167.72,    168.00801, 168.29736,  168.58537,  168.87471,  169.16272,  169.45206,  169.74008,  170.0294,  170.31743, 170.60677,  170.89479,
      171.1841,  171.47214, 171.76143,  172.04948,  172.33879, 172.62685, 172.91612,  173.20418,  173.49347,  173.78154,  174.07082,  174.35889,  174.64818, 174.93625, 175.22551,  175.5136,
      175.80286, 176.09096, 176.3802,   176.6683,   176.95755, 177.24565, 177.5349,   177.82301,  178.11226,  178.40036,  178.68959,  178.97772,  179.26694, 179.55507, 179.84428,  180.13242,
      180.42165, 180.70978, 180.99898,  181.28712,  181.57634, 181.86447, 182.15367,  182.44183,  182.73103,  183.01918,  183.30838,  183.59653,  183.88573, 184.17389, 184.46306,  184.75124,
      185.04042, 185.32858, 185.61777,  185.90594,  186.1951,  186.48329, 186.77245,  187.06064,  187.3498,   187.638,    187.92714,  188.21535,  188.50449, 188.7927,  189.08183,  189.37006,
      189.65918, 189.94742, 190.23653,  190.52477,  190.81389, 191.10211, 191.39122,  191.67947,  191.96857,  192.25682,  192.54591,  192.83418,  193.12326, 193.41153, 193.70059,  193.98888,
      194.27795, 194.56624, 194.8553,   195.14359,  195.43265, 195.72093, 196.01,     196.2983,   196.58733,  196.87564,  197.16467,  197.45299,  197.74203, 198.03033, 198.31938,  198.6077,
      198.89673, 199.18504, 199.47408,  199.7624,   200.0514,  200.33975, 200.62875,  200.9171,   201.20612,  201.49446,  201.78345,  202.07181,  202.3608,  202.64915, 202.93814,  203.22652,
      203.51549, 203.80386, 204.09282,  204.38121,  204.67017, 204.95857, 205.24751,  205.53592,  205.82486,  206.11327,  206.40219,  206.69063,  206.97954, 207.26797, 207.55688,  207.84532,
      208.13423, 208.42268, 208.71156,  209.00003,  209.28891, 209.57738, 209.86624,  210.15474,  210.44359,  210.7321,   211.02092,  211.30943,  211.59827, 211.8868,  212.17558,  212.46414,
      212.7529,  213.0415,  213.33006,  213.61885,  213.90736, 214.19623, 214.4847,   214.77357,  215.06204,  215.35092,  215.63936,  215.9283,   216.21672, 216.50565, 216.79405,  217.083,
      217.37138, 217.66035, 217.94873,  218.23772,  218.52608, 218.81506, 219.10342,  219.39244,  219.68077,  219.96979,  220.25812,  220.54715,  220.83546, 221.12451, 221.4128,   221.70187,
      221.99016, 222.27922, 222.5675,   222.85658,  223.14485, 223.43394, 223.7222,   224.0113,   224.29955,  224.58865,  224.87689,  225.16602,  225.45424, 225.74338, 226.0316,   226.32072,
      226.60895, 226.89809, 227.1863,   227.47545,  227.76364, 228.05281, 228.34099,  228.63017,  228.91833,  229.20752,  229.4957,   229.78488,  230.07304, 230.36224, 230.65038,  230.93959,
      231.22774, 231.51694, 231.80508,  232.0943,   232.38245, 232.67166, 232.9598,   233.24902,  233.53714,  233.82637,  234.11449,  234.40373,  234.69185, 234.9811,  235.2692,   235.55846,
      235.84654, 236.1358,  236.42389,  236.71317,  237.00125, 237.29053, 237.57858,  237.86789,  238.15594,  238.44524,  238.73329,  239.0226,   239.31065, 239.59996, 239.88799,  240.1773,
      240.46535, 240.75467, 241.0427,   241.33203,  241.62006, 241.9094,  242.1974,   242.48674,  242.77475,  243.0641,   243.3521,   243.64146,  243.92946, 244.21883, 244.5068,   244.79617,
      245.08415, 245.37352, 245.6615,   245.95088,  246.23886, 246.52826, 246.81621,  247.10559,  247.39355,  247.68295,  247.97092,  248.26031,  248.54826, 248.83768, 249.12561,  249.41504,
      249.70296, 249.99239, 250.28032,  250.56975,  250.85767, 251.14713, 251.43501,  251.72447,  252.01237,  252.30182,  252.58972,  252.87918,  253.16707, 253.45654, 253.74442,  254.0339,
      254.32176, 254.61127, 254.89912,  255.18861,  255.47647, 255.76598, 256.05383,  256.34332,  256.6312,   256.92072,  257.20853,  257.49805,  257.7859,  258.07544, 258.36325,  258.6528,
      258.94058, 259.23013, 259.51794,  259.8075,   260.09528, 260.38486, 260.67264,  260.96222,  261.25,     261.53958,  261.82733,  262.11694,  262.4047,  262.6943,  262.98206,  263.27167,
      263.5594,  263.84903, 264.13675,  264.4264,   264.7141,  265.00378, 265.29144,  265.58115,  265.8688,   266.1585,   266.44617,  266.73587,  267.0235,  267.3133,  267.60086,  267.89066,
      268.17822, 268.46808, 268.75555,  269.0457,   269.3329,  269.6231,  269.91028,  270.20047,  270.4876,   270.77786,  271.06497,  271.35526,  271.64233, 271.93262, 272.21967,  272.50998,
      272.797,   273.08734, 273.37433,  273.66467,  273.9517,  274.24203, 274.52905,  274.8194,   275.1064,   275.39676,  275.68375,  275.97415,  276.26108, 276.55148, 276.83844,  277.12885,
      277.41577, 277.7062,  277.99313,  278.28354,  278.57047, 278.8609,  279.14783,  279.43826,  279.7252,   280.01562,  280.30252,  280.593,    280.87988, 281.17035, 281.4572,   281.7477,
      282.03458, 282.32504, 282.61194,  282.90237,  283.18927, 283.47974, 283.76663,  284.05713,  284.34396,  284.6345,   284.92133,  285.21182,  285.49866, 285.78918, 286.07602,  286.36652,
      286.65335, 286.94388, 287.2307,   287.52124,  287.80804, 288.0986,  288.38538,  288.67593,
  };

  const std::vector<float> k_SummationData = {
      0.0,      1.0,      3.0,      6.0,      10.0,     15.0,     21.0,     28.0,     36.0,     45.0,     55.0,     66.0,     78.0,     91.0,     105.0,    120.0,    136.0,    153.0,    171.0,
      190.0,    210.0,    231.0,    253.0,    276.0,    300.0,    325.0,    351.0,    378.0,    406.0,    435.0,    465.0,    496.0,    528.0,    561.0,    595.0,    630.0,    666.0,    703.0,
      741.0,    780.0,    820.0,    861.0,    903.0,    946.0,    990.0,    1035.0,   1081.0,   1128.0,   1176.0,   1225.0,   1275.0,   1326.0,   1378.0,   1431.0,   1485.0,   1540.0,   1596.0,
      1653.0,   1711.0,   1770.0,   1830.0,   1891.0,   1953.0,   2016.0,   2080.0,   2145.0,   2211.0,   2278.0,   2346.0,   2415.0,   2485.0,   2556.0,   2628.0,   2701.0,   2775.0,   2850.0,
      2926.0,   3003.0,   3081.0,   3160.0,   3240.0,   3321.0,   3403.0,   3486.0,   3570.0,   3655.0,   3741.0,   3828.0,   3916.0,   4005.0,   4095.0,   4186.0,   4278.0,   4371.0,   4465.0,
      4560.0,   4656.0,   4753.0,   4851.0,   4950.0,   5050.0,   5151.0,   5253.0,   5356.0,   5460.0,   5565.0,   5671.0,   5778.0,   5886.0,   5995.0,   6105.0,   6216.0,   6328.0,   6441.0,
      6555.0,   6670.0,   6786.0,   6903.0,   7021.0,   7140.0,   7260.0,   7381.0,   7503.0,   7626.0,   7750.0,   7875.0,   8001.0,   8128.0,   8256.0,   8385.0,   8515.0,   8646.0,   8778.0,
      8911.0,   9045.0,   9180.0,   9316.0,   9453.0,   9591.0,   9730.0,   9870.0,   10011.0,  10153.0,  10296.0,  10440.0,  10585.0,  10731.0,  10878.0,  11026.0,  11175.0,  11325.0,  11476.0,
      11628.0,  11781.0,  11935.0,  12090.0,  12246.0,  12403.0,  12561.0,  12720.0,  12880.0,  13041.0,  13203.0,  13366.0,  13530.0,  13695.0,  13861.0,  14028.0,  14196.0,  14365.0,  14535.0,
      14706.0,  14878.0,  15051.0,  15225.0,  15400.0,  15576.0,  15753.0,  15931.0,  16110.0,  16290.0,  16471.0,  16653.0,  16836.0,  17020.0,  17205.0,  17391.0,  17578.0,  17766.0,  17955.0,
      18145.0,  18336.0,  18528.0,  18721.0,  18915.0,  19110.0,  19306.0,  19503.0,  19701.0,  19900.0,  20100.0,  20301.0,  20503.0,  20706.0,  20910.0,  21115.0,  21321.0,  21528.0,  21736.0,
      21945.0,  22155.0,  22366.0,  22578.0,  22791.0,  23005.0,  23220.0,  23436.0,  23653.0,  23871.0,  24090.0,  24310.0,  24531.0,  24753.0,  24976.0,  25200.0,  25425.0,  25651.0,  25878.0,
      26106.0,  26335.0,  26565.0,  26796.0,  27028.0,  27261.0,  27495.0,  27730.0,  27966.0,  28203.0,  28441.0,  28680.0,  28920.0,  29161.0,  29403.0,  29646.0,  29890.0,  30135.0,  30381.0,
      30628.0,  30876.0,  31125.0,  31375.0,  31626.0,  31878.0,  32131.0,  32385.0,  32640.0,  32896.0,  33153.0,  33411.0,  33670.0,  33930.0,  34191.0,  34453.0,  34716.0,  34980.0,  35245.0,
      35511.0,  35778.0,  36046.0,  36315.0,  36585.0,  36856.0,  37128.0,  37401.0,  37675.0,  37950.0,  38226.0,  38503.0,  38781.0,  39060.0,  39340.0,  39621.0,  39903.0,  40186.0,  40470.0,
      40755.0,  41041.0,  41328.0,  41616.0,  41905.0,  42195.0,  42486.0,  42778.0,  43071.0,  43365.0,  43660.0,  43956.0,  44253.0,  44551.0,  44850.0,  45150.0,  45451.0,  45753.0,  46056.0,
      46360.0,  46665.0,  46971.0,  47278.0,  47586.0,  47895.0,  48205.0,  48516.0,  48828.0,  49141.0,  49455.0,  49770.0,  50086.0,  50403.0,  50721.0,  51040.0,  51360.0,  51681.0,  52003.0,
      52326.0,  52650.0,  52975.0,  53301.0,  53628.0,  53956.0,  54285.0,  54615.0,  54946.0,  55278.0,  55611.0,  55945.0,  56280.0,  56616.0,  56953.0,  57291.0,  57630.0,  57970.0,  58311.0,
      58653.0,  58996.0,  59340.0,  59685.0,  60031.0,  60378.0,  60726.0,  61075.0,  61425.0,  61776.0,  62128.0,  62481.0,  62835.0,  63190.0,  63546.0,  63903.0,  64261.0,  64620.0,  64980.0,
      65341.0,  65703.0,  66066.0,  66430.0,  66795.0,  67161.0,  67528.0,  67896.0,  68265.0,  68635.0,  69006.0,  69378.0,  69751.0,  70125.0,  70500.0,  70876.0,  71253.0,  71631.0,  72010.0,
      72390.0,  72771.0,  73153.0,  73536.0,  73920.0,  74305.0,  74691.0,  75078.0,  75466.0,  75855.0,  76245.0,  76636.0,  77028.0,  77421.0,  77815.0,  78210.0,  78606.0,  79003.0,  79401.0,
      79800.0,  80200.0,  80601.0,  81003.0,  81406.0,  81810.0,  82215.0,  82621.0,  83028.0,  83436.0,  83845.0,  84255.0,  84666.0,  85078.0,  85491.0,  85905.0,  86320.0,  86736.0,  87153.0,
      87571.0,  87990.0,  88410.0,  88831.0,  89253.0,  89676.0,  90100.0,  90525.0,  90951.0,  91378.0,  91806.0,  92235.0,  92665.0,  93096.0,  93528.0,  93961.0,  94395.0,  94830.0,  95266.0,
      95703.0,  96141.0,  96580.0,  97020.0,  97461.0,  97903.0,  98346.0,  98790.0,  99235.0,  99681.0,  100128.0, 100576.0, 101025.0, 101475.0, 101926.0, 102378.0, 102831.0, 103285.0, 103740.0,
      104196.0, 104653.0, 105111.0, 105570.0, 106030.0, 106491.0, 106953.0, 107416.0, 107880.0, 108345.0, 108811.0, 109278.0, 109746.0, 110215.0, 110685.0, 111156.0, 111628.0, 112101.0, 112575.0,
      113050.0, 113526.0, 114003.0, 114481.0, 114960.0, 115440.0, 115921.0, 116403.0, 116886.0, 117370.0, 117855.0, 118341.0, 118828.0, 119316.0, 119805.0, 120295.0, 120786.0, 121278.0, 121771.0,
      122265.0, 122760.0, 123256.0, 123753.0, 124251.0, 124750.0, 125250.0, 125751.0, 126253.0, 126756.0, 127260.0, 127765.0, 128271.0, 128778.0, 129286.0, 129795.0, 130305.0, 130816.0, 131328.0,
      131841.0, 132355.0, 132870.0, 133386.0, 133903.0, 134421.0, 134940.0, 135460.0, 135981.0, 136503.0, 137026.0, 137550.0, 138075.0, 138601.0, 139128.0, 139656.0, 140185.0, 140715.0, 141246.0,
      141778.0, 142311.0, 142845.0, 143380.0, 143916.0, 144453.0, 144991.0, 145530.0, 146070.0, 146611.0, 147153.0, 147696.0, 148240.0, 148785.0, 149331.0, 149878.0, 150426.0, 150975.0, 151525.0,
      152076.0, 152628.0, 153181.0, 153735.0, 154290.0, 154846.0, 155403.0, 155961.0, 156520.0, 157080.0, 157641.0, 158203.0, 158766.0, 159330.0, 159895.0, 160461.0, 161028.0, 161596.0, 162165.0,
      162735.0, 163306.0, 163878.0, 164451.0, 165025.0, 165600.0, 166176.0, 166753.0, 167331.0, 167910.0, 168490.0, 169071.0, 169653.0, 170236.0, 170820.0, 171405.0, 171991.0, 172578.0, 173166.0,
      173755.0, 174345.0, 174936.0, 175528.0, 176121.0, 176715.0, 177310.0, 177906.0, 178503.0, 179101.0, 179700.0, 180300.0, 180901.0, 181503.0, 182106.0, 182710.0, 183315.0, 183921.0, 184528.0,
      185136.0, 185745.0, 186355.0, 186966.0, 187578.0, 188191.0, 188805.0, 189420.0, 190036.0, 190653.0, 191271.0, 191890.0, 192510.0, 193131.0, 193753.0, 194376.0, 195000.0, 195625.0, 196251.0,
      196878.0, 197506.0, 198135.0, 198765.0, 199396.0, 200028.0, 200661.0, 201295.0, 201930.0, 202566.0, 203203.0, 203841.0, 204480.0, 205120.0, 205761.0, 206403.0, 207046.0, 207690.0, 208335.0,
      208981.0, 209628.0, 210276.0, 210925.0, 211575.0, 212226.0, 212878.0, 213531.0, 214185.0, 214840.0, 215496.0, 216153.0, 216811.0, 217470.0, 218130.0, 218791.0, 219453.0, 220116.0, 220780.0,
      221445.0, 222111.0, 222778.0, 223446.0, 224115.0, 224785.0, 225456.0, 226128.0, 226801.0, 227475.0, 228150.0, 228826.0, 229503.0, 230181.0, 230860.0, 231540.0, 232221.0, 232903.0, 233586.0,
      234270.0, 234955.0, 235641.0, 236328.0, 237016.0, 237705.0, 238395.0, 239086.0, 239778.0, 240471.0, 241165.0, 241860.0, 242556.0, 243253.0, 243951.0, 244650.0, 245350.0, 246051.0, 246753.0,
      247456.0, 248160.0, 248865.0, 249571.0, 250278.0, 250986.0, 251695.0, 252405.0, 253116.0, 253828.0, 254541.0, 255255.0, 255970.0, 256686.0, 257403.0, 258121.0, 258840.0, 259560.0, 260281.0,
      261003.0, 261726.0, 262450.0, 263175.0, 263901.0, 264628.0, 265356.0, 266085.0, 266815.0, 267546.0, 268278.0, 269011.0, 269745.0, 270480.0, 271216.0, 271953.0, 272691.0, 273430.0, 274170.0,
      274911.0, 275653.0, 276396.0, 277140.0, 277885.0, 278631.0, 279378.0, 280126.0, 280875.0, 281625.0, 282376.0, 283128.0, 283881.0, 284635.0, 285390.0, 286146.0, 286903.0, 287661.0, 288420.0,
      289180.0, 289941.0, 290703.0, 291466.0, 292230.0, 292995.0, 293761.0, 294528.0, 295296.0, 296065.0, 296835.0, 297606.0, 298378.0, 299151.0, 299925.0, 300700.0, 301476.0, 302253.0, 303031.0,
      303810.0, 304590.0, 305371.0, 306153.0, 306936.0, 307720.0, 308505.0, 309291.0, 310078.0, 310866.0, 311655.0, 312445.0, 313236.0, 314028.0, 314821.0, 315615.0, 316410.0, 317206.0, 318003.0,
      318801.0, 319600.0, 320400.0, 321201.0, 322003.0, 322806.0, 323610.0, 324415.0, 325221.0, 326028.0, 326836.0, 327645.0, 328455.0, 329266.0, 330078.0, 330891.0, 331705.0, 332520.0, 333336.0,
      334153.0, 334971.0, 335790.0, 336610.0, 337431.0, 338253.0, 339076.0, 339900.0, 340725.0, 341551.0, 342378.0, 343206.0, 344035.0, 344865.0, 345696.0, 346528.0, 347361.0, 348195.0, 349030.0,
      349866.0, 350703.0, 351541.0, 352380.0, 353220.0, 354061.0, 354903.0, 355746.0, 356590.0, 357435.0, 358281.0, 359128.0, 359976.0, 360825.0, 361675.0, 362526.0, 363378.0, 364231.0, 365085.0,
      365940.0, 366796.0, 367653.0, 368511.0, 369370.0, 370230.0, 371091.0, 371953.0, 372816.0, 373680.0, 374545.0, 375411.0, 376278.0, 377146.0, 378015.0, 378885.0, 379756.0, 380628.0, 381501.0,
      382375.0, 383250.0, 384126.0, 385003.0, 385881.0, 386760.0, 387640.0, 388521.0, 389403.0, 390286.0, 391170.0, 392055.0, 392941.0, 393828.0, 394716.0, 395605.0, 396495.0, 397386.0, 398278.0,
      399171.0, 400065.0, 400960.0, 401856.0, 402753.0, 403651.0, 404550.0, 405450.0, 406351.0, 407253.0, 408156.0, 409060.0, 409965.0, 410871.0, 411778.0, 412686.0, 413595.0, 414505.0, 415416.0,
      416328.0, 417241.0, 418155.0, 419070.0, 419986.0, 420903.0, 421821.0, 422740.0, 423660.0, 424581.0, 425503.0, 426426.0, 427350.0, 428275.0, 429201.0, 430128.0, 431056.0, 431985.0, 432915.0,
      433846.0, 434778.0, 435711.0, 436645.0, 437580.0, 438516.0, 439453.0, 440391.0, 441330.0, 442270.0, 443211.0, 444153.0, 445096.0, 446040.0, 446985.0, 447931.0, 448878.0, 449826.0, 450775.0,
      451725.0, 452676.0, 453628.0, 454581.0, 455535.0, 456490.0, 457446.0, 458403.0, 459361.0, 460320.0, 461280.0, 462241.0, 463203.0, 464166.0, 465130.0, 466095.0, 467061.0, 468028.0, 468996.0,
      469965.0, 470935.0, 471906.0, 472878.0, 473851.0, 474825.0, 475800.0, 476776.0, 477753.0, 478731.0, 479710.0, 480690.0, 481671.0, 482653.0, 483636.0, 484620.0, 485605.0, 486591.0, 487578.0,
      488566.0, 489555.0, 490545.0, 491536.0, 492528.0, 493521.0, 494515.0, 495510.0, 496506.0, 497503.0, 498501.0, 499500.0,
  };
};
